import { getAsObject } from "@parameter1/base-cms-object-path";
import hierarchyAliases from "@parameter1/base-cms-marko-web/utils/hierarchy-aliases";
import { getAsArray } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";

import homePageTopStoriesLoader from "@bonhill-group/package-global/loaders/home-page-top-stories";

$ const { config, site } = out.global;

$ const loader = getAsObject(input, "loader");
$ const { id, alias, name, pageNode } = input;
$ const sections = getAsArray(input, "sections");
$ const withFeatured = defaultValue(input.withFeatured, true);
$ const excludedSectionIds = [];
$ const { GAM, apollo, i18n } = out.global;

$ const rightRailHeader = defaultValue(input.rightRailHeader, "Latest News");

$ const promise = homePageTopStoriesLoader(apollo, {
  featuredParams: { limit: 7 },
});
<marko-web-resolve|{ resolved: sectionContent }| promise=promise>
  $ const { topStory, featured, ids } = sectionContent;
  <theme-website-section-page id=id alias=alias name=name>
    <@head>
      <marko-web-gtm-website-section-context|{ context }| alias=alias>
        <marko-web-gtm-push data=context />
      </marko-web-gtm-website-section-context>
      <marko-web-resolve-page|{ data: section }| node=pageNode>
        <marko-web-p1-events-track-website-section node=section />
      </marko-web-resolve-page>
      <${input.head} />
    </@head>
    <@page>
      <marko-web-resolve-page|{ data: section }| node=pageNode>
        $ const aliases = hierarchyAliases(section);
        <marko-web-page-wrapper>
          <@section class=["mt-3", "mb-3"]>
            <div class="row top-stories-row">
              $ const rowOneClass = (withFeatured) ? "col-lg-5" : "col-lg-6";
              <div class=rowOneClass>
                <if(topStory.nodes && topStory.nodes.length)>
                  $ const topStoryNode = topStory.nodes[0];
                  $ const heroImageNode = {
                    id: topStoryNode.id,
                    type: topStoryNode.type,
                    siteContext: topStoryNode.siteContext,
                    primaryImage: topStoryNode.primaryImage,
                  };
                  $ const featuredCardNodes = topStoryNode;
                  $ const cardNodes = topStoryNode;
                  <marko-web-element tag="h1" block-name="top-stories" name="header">Top Story</marko-web-element>
                  <marko-web-element block-name="top-story" name="row">
                    <marko-web-element block-name="top-story" name="col" modifiers=["hero"]>
                      <theme-content-node
                        image-position="top"
                        card=true
                        flush=true
                        image-only=true
                        modifiers=["top-story-hero-image"]
                        node=heroImageNode
                      >
                        <@image fluid=true width=685 ar="3:2" lazyload=false />
                      </theme-content-node>
                    </marko-web-element>
                    <marko-web-element block-name="top-story" name="col" modifiers=["list"]>
                      <theme-content-node
                        full-height=true
                        card=true
                        display-image=false
                        flush=true
                        with-dates=false
                        modifiers=["top-story-hero"]
                        node=topStoryNode
                      />
                    </marko-web-element>
                  </marko-web-element>
                </if>
              </div>
              $ const rowTwoClass = (withFeatured) ? "col-lg-4" : "col-lg-6";
              <div class=rowTwoClass>
                $ const featuredNodes = featured.nodes;
                <theme-latest-content-list-block nodes=featuredNodes title="Latest News" >
                  <@query-params exclude-content-ids=ids limit=7 />
                  <!-- <@native-x indexes=[0] name="default" aliases=aliases /> -->
                  <@node with-section=false with-dates=false display-image=false />
                </theme-latest-content-list-block>
              </div>
              <if(withFeatured)>
                <div class="col-lg-3">
                  <theme-content-card-deck-block
                    alias="home/featured"
                    cols=1
                    query-params={ limit: 2 }
                    view-more=false
                  >
                    <@node with-section=false />
                  </theme-content-card-deck-block>
                </div>
              </if>
            </div>
          </@section>

          <@section|{ aliases }|>
            <global-section-feed-wrapper aliases=aliases with-pagination=false>
              <@header>${i18n("More from")} ${config.siteName()}</@header>
              <@query-params
                alias=section.alias
                limit=12
                optionName=["Pinned", "Standard"]
                excludeContentIds=sectionContent.ids
                requires-image=true
              />
              <@rail>
                <global-latest-opinion-list-block
                  title="Opinion"
                  alias="opinion"
                  query-params={ excludeContentIds: sectionContent.ids }
                  class="sticky-top"
                />
              </@rail>
              <@rail>
                <!-- <theme-latest-content-list-block alias="videos" title="Latest Videos" class="sticky-top" >
                  <@node with-section=true with-dates=false />>
                </theme-latest-content-list-block> -->
              </@rail>
            </global-section-feed-wrapper>
          </@section>

        </marko-web-page-wrapper>
      </marko-web-resolve-page>
    </@page>
    <!-- <@foot>
      <marko-web-resolve-page|{ data: section }| node=pageNode>
        <theme-fixed-ad-bottom aliases=hierarchyAliases(section) />
      </marko-web-resolve-page>
    </@foot> -->
  </theme-website-section-page>
</marko-web-resolve>
